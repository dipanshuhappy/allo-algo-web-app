{
  "version": 3,
  "sources": [
    "../../registry/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;;;AACQ;;;;;;;;;;;;AAAA;AACA;AAAa;;AAAb;;AAHR;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;AAAA;AAAA;AAKK;;AAAA;AAAA;AAAA;;AAAA;AALL;;;AAKK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;AAAA;AAAA;AAAA;;AAAA;AARL;;;AAQK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;AAAA;AAAA;AAAA;;AAAA;AAZL;;;AAYK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;AAAA;AAAA;AAAA;;AAAA;AAhBL;;;AAgBK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;AAAA;AAAA;AAAA;;AAAA;AApBL;;;AAoBK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;AAAA;AAAA;AAAA;;AAAA;AAxBL;;;AAAA;;;AAwBK;;;AAAA;AAAA;AAKA;;AAAA;AAAA;AAAA;;AAAA;AA7BL;;;AAAA;;;AAAA;;;AAAA;;;AA6BK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BL;;AAAA;;;;;;;;;AAAA;AAAA;AAKA;;;AAEe;AAAA;;AAAA;AAAA;AAAA;AAAP;AACR;;;AAEkB;AAAA;;AAAA;AAAA;AAAA;AACH;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;AACR;;;AAEkB;AAAA;;AAAA;AAAA;AAAA;AACH;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AACR;;;AAEQ;;AAAU;;;AACH;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAP;AACR;;;AAEQ;;AAAU;;;AACH;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAP;AACR;;;AAE+C;AAAA;;AAAA;AAAA;AAAA;AAAA;AACvC;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACA;;AAAA;;AAAA;;AACR;;;AAEqB;AAAA;AAAA;AAAA;AACC;AAAA;;;AAAA;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAA4B;;;;;AAA5B;AAAA;;AAEE;AAAA;AAAf;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAKkC;;AAJxB;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AANH;AASV;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.registry.contract.Registry.approval_program",
      "params": {},
      "block": "smart_contracts.registry.contract.Registry.approval_program",
      "stack_in": [],
      "op": "intcblock 1 0 70 68"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 \"profilesById\" \"index\""
    },
    "33": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "35": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "38": {
      "callsub": "smart_contracts.registry.contract.Registry.__init__",
      "op": "callsub __init__"
    },
    "41": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "smart_contracts.registry.contract.Registry.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "44": {
      "op": "return",
      "stack_out": []
    },
    "45": {
      "subroutine": "smart_contracts.registry.contract.Registry.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "48": {
      "op": "pushbytess \"version\" 0x01 // \"version\", 0x01",
      "defined_out": [
        "\"version\"",
        "0x01"
      ],
      "stack_out": [
        "\"version\"",
        "0x01"
      ]
    },
    "60": {
      "op": "app_global_put",
      "stack_out": []
    },
    "61": {
      "op": "bytec_2 // \"index\"",
      "defined_out": [
        "\"index\""
      ],
      "stack_out": [
        "\"index\""
      ]
    },
    "62": {
      "op": "pushbytes 0x",
      "defined_out": [
        "\"index\"",
        "0x"
      ],
      "stack_out": [
        "\"index\"",
        "0x"
      ]
    },
    "64": {
      "op": "app_global_put",
      "stack_out": []
    },
    "65": {
      "retsub": true,
      "op": "retsub"
    },
    "66": {
      "subroutine": "smart_contracts.registry.contract.Registry.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "69": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "71": {
      "op": "bz __puya_arc4_router___bare_routing@11",
      "stack_out": []
    },
    "74": {
      "op": "pushbytess 0x14e43177 0xa5cfcc81 0xf4384848 0x6bc1b2f8 0xcc703117 0xd285c963 0x2fb1d3b0 // method \"getProfileById(uint512)(uint256,string,string,address,uint64[],address[])\", method \"getAnchors(uint512)uint64[]\", method \"getMembers(uint512)address[]\", method \"getProfileName(uint512)string\", method \"getProfileMetadata(uint512)string\", method \"addMember(uint512,address)void\", method \"createProfile(string,string)uint64\""
    },
    "111": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(addMember(uint512,address)void)",
        "Method(createProfile(string,string)uint64)",
        "Method(getAnchors(uint512)uint64[])",
        "Method(getMembers(uint512)address[])",
        "Method(getProfileById(uint512)(uint256,string,string,address,uint64[],address[]))",
        "Method(getProfileMetadata(uint512)string)",
        "Method(getProfileName(uint512)string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(getProfileById(uint512)(uint256,string,string,address,uint64[],address[]))",
        "Method(getAnchors(uint512)uint64[])",
        "Method(getMembers(uint512)address[])",
        "Method(getProfileName(uint512)string)",
        "Method(getProfileMetadata(uint512)string)",
        "Method(addMember(uint512,address)void)",
        "Method(createProfile(string,string)uint64)",
        "tmp%2#0"
      ]
    },
    "114": {
      "op": "match __puya_arc4_router___getProfileById_route@2 __puya_arc4_router___getAnchors_route@3 __puya_arc4_router___getMembers_route@4 __puya_arc4_router___getProfileName_route@5 __puya_arc4_router___getProfileMetadata_route@6 __puya_arc4_router___addMember_route@7 __puya_arc4_router___createProfile_route@8",
      "stack_out": []
    },
    "130": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "131": {
      "retsub": true,
      "op": "retsub"
    },
    "132": {
      "block": "__puya_arc4_router___getProfileById_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "134": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "135": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "136": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "138": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "139": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "142": {
      "callsub": "smart_contracts.registry.contract.Registry.getProfileById",
      "op": "callsub getProfileById",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "145": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "146": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%8#0"
      ]
    },
    "147": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "148": {
      "op": "log",
      "stack_out": []
    },
    "149": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "150": {
      "retsub": true,
      "op": "retsub"
    },
    "151": {
      "block": "__puya_arc4_router___getAnchors_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "153": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "154": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "155": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "157": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "158": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "161": {
      "callsub": "smart_contracts.registry.contract.Registry.getAnchors",
      "op": "callsub getAnchors",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "164": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "0x151f7c75"
      ]
    },
    "165": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%15#0"
      ]
    },
    "166": {
      "op": "concat",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "167": {
      "op": "log",
      "stack_out": []
    },
    "168": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "169": {
      "retsub": true,
      "op": "retsub"
    },
    "170": {
      "block": "__puya_arc4_router___getMembers_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "172": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "173": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "174": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "176": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "177": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "180": {
      "callsub": "smart_contracts.registry.contract.Registry.getMembers",
      "op": "callsub getMembers",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "183": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "0x151f7c75"
      ]
    },
    "184": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%22#0"
      ]
    },
    "185": {
      "op": "concat",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "186": {
      "op": "log",
      "stack_out": []
    },
    "187": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "188": {
      "retsub": true,
      "op": "retsub"
    },
    "189": {
      "block": "__puya_arc4_router___getProfileName_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "191": {
      "op": "!",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "192": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "193": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "195": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "196": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "199": {
      "callsub": "smart_contracts.registry.contract.Registry.getProfileName",
      "op": "callsub getProfileName",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "202": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "203": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "204": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "205": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "208": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "209": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "210": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "211": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "212": {
      "op": "concat",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "213": {
      "op": "log",
      "stack_out": []
    },
    "214": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "215": {
      "retsub": true,
      "op": "retsub"
    },
    "216": {
      "block": "__puya_arc4_router___getProfileMetadata_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "218": {
      "op": "!",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "219": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "220": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "222": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "223": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "226": {
      "callsub": "smart_contracts.registry.contract.Registry.getProfileMetadata",
      "op": "callsub getProfileMetadata",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "229": {
      "op": "dup",
      "defined_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "230": {
      "op": "len",
      "defined_out": [
        "length%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length%1#0"
      ]
    },
    "231": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "as_bytes%1#0"
      ]
    },
    "232": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length_uint16%1#0"
      ]
    },
    "235": {
      "op": "swap",
      "stack_out": [
        "length_uint16%1#0",
        "to_encode%1#0"
      ]
    },
    "236": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "237": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "0x151f7c75"
      ]
    },
    "238": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ]
    },
    "239": {
      "op": "concat",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "240": {
      "op": "log",
      "stack_out": []
    },
    "241": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "242": {
      "retsub": true,
      "op": "retsub"
    },
    "243": {
      "block": "__puya_arc4_router___addMember_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "245": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "246": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "247": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "249": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "250": {
      "op": "txna ApplicationArgs 1"
    },
    "253": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "tmp%41#0"
      ]
    },
    "256": {
      "callsub": "smart_contracts.registry.contract.Registry.addMember",
      "op": "callsub addMember",
      "stack_out": []
    },
    "259": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "260": {
      "retsub": true,
      "op": "retsub"
    },
    "261": {
      "block": "__puya_arc4_router___createProfile_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "263": {
      "op": "!",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "264": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "265": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "267": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "268": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "271": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "274": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%47#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "tmp%48#0"
      ]
    },
    "277": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%47#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "tmp%49#0"
      ]
    },
    "280": {
      "callsub": "smart_contracts.registry.contract.Registry.createProfile",
      "op": "callsub createProfile",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "283": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "284": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "285": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "286": {
      "op": "concat",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "287": {
      "op": "log",
      "stack_out": []
    },
    "288": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "289": {
      "retsub": true,
      "op": "retsub"
    },
    "290": {
      "block": "__puya_arc4_router___bare_routing@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "292": {
      "op": "bnz __puya_arc4_router___after_if_else@15",
      "stack_out": []
    },
    "295": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "297": {
      "op": "!",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "298": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "299": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "300": {
      "retsub": true,
      "op": "retsub"
    },
    "301": {
      "block": "__puya_arc4_router___after_if_else@15",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "302": {
      "retsub": true,
      "op": "retsub"
    },
    "303": {
      "subroutine": "smart_contracts.registry.contract.Registry.getProfileById",
      "params": {
        "id#0": "bytes"
      },
      "block": "getProfileById",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "306": {
      "op": "bytec_1 // \"profilesById\"",
      "defined_out": [
        "\"profilesById\""
      ],
      "stack_out": [
        "\"profilesById\""
      ]
    },
    "307": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"profilesById\"",
        "id#0 (copy)"
      ],
      "stack_out": [
        "\"profilesById\"",
        "id#0 (copy)"
      ]
    },
    "309": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "310": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "311": {
      "error": "check self.profilesById entry exists",
      "op": "assert // check self.profilesById entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "312": {
      "retsub": true,
      "op": "retsub"
    },
    "313": {
      "subroutine": "smart_contracts.registry.contract.Registry.getAnchors",
      "params": {
        "profileId#0": "bytes"
      },
      "block": "getAnchors",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "316": {
      "op": "bytec_1 // \"profilesById\"",
      "defined_out": [
        "\"profilesById\""
      ],
      "stack_out": [
        "\"profilesById\""
      ]
    },
    "317": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"profilesById\"",
        "profileId#0 (copy)"
      ],
      "stack_out": [
        "\"profilesById\"",
        "profileId#0 (copy)"
      ]
    },
    "319": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "320": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "profile#0"
      ],
      "stack_out": [
        "profile#0",
        "maybe_exists%0#0"
      ]
    },
    "321": {
      "error": "check self.profilesById entry exists",
      "op": "assert // check self.profilesById entry exists",
      "stack_out": [
        "profile#0"
      ]
    },
    "322": {
      "op": "dup",
      "defined_out": [
        "profile#0",
        "profile#0 (copy)"
      ],
      "stack_out": [
        "profile#0",
        "profile#0 (copy)"
      ]
    },
    "323": {
      "op": "intc_3 // 68",
      "defined_out": [
        "68",
        "profile#0",
        "profile#0 (copy)"
      ],
      "stack_out": [
        "profile#0",
        "profile#0 (copy)",
        "68"
      ]
    },
    "324": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "profile#0"
      ],
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0"
      ]
    },
    "325": {
      "op": "dig 1",
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0",
        "profile#0 (copy)"
      ]
    },
    "327": {
      "op": "intc_2 // 70",
      "defined_out": [
        "70",
        "item_start_offset%0#0",
        "profile#0",
        "profile#0 (copy)"
      ],
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0",
        "profile#0 (copy)",
        "70"
      ]
    },
    "328": {
      "op": "extract_uint16",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "profile#0"
      ],
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "329": {
      "op": "substring3",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "330": {
      "retsub": true,
      "op": "retsub"
    },
    "331": {
      "subroutine": "smart_contracts.registry.contract.Registry.getMembers",
      "params": {
        "profileId#0": "bytes"
      },
      "block": "getMembers",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "334": {
      "op": "bytec_1 // \"profilesById\"",
      "defined_out": [
        "\"profilesById\""
      ],
      "stack_out": [
        "\"profilesById\""
      ]
    },
    "335": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"profilesById\"",
        "profileId#0 (copy)"
      ],
      "stack_out": [
        "\"profilesById\"",
        "profileId#0 (copy)"
      ]
    },
    "337": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "338": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "profile#0"
      ],
      "stack_out": [
        "profile#0",
        "maybe_exists%0#0"
      ]
    },
    "339": {
      "error": "check self.profilesById entry exists",
      "op": "assert // check self.profilesById entry exists",
      "stack_out": [
        "profile#0"
      ]
    },
    "340": {
      "op": "dup",
      "defined_out": [
        "profile#0",
        "profile#0 (copy)"
      ],
      "stack_out": [
        "profile#0",
        "profile#0 (copy)"
      ]
    },
    "341": {
      "op": "intc_2 // 70",
      "defined_out": [
        "70",
        "profile#0",
        "profile#0 (copy)"
      ],
      "stack_out": [
        "profile#0",
        "profile#0 (copy)",
        "70"
      ]
    },
    "342": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "profile#0"
      ],
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0"
      ]
    },
    "343": {
      "op": "dig 1",
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0",
        "profile#0 (copy)"
      ]
    },
    "345": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "profile#0"
      ],
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "346": {
      "op": "substring3",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "347": {
      "retsub": true,
      "op": "retsub"
    },
    "348": {
      "subroutine": "smart_contracts.registry.contract.Registry.getProfileName",
      "params": {
        "profileId#0": "bytes"
      },
      "block": "getProfileName",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "351": {
      "op": "frame_dig -1",
      "defined_out": [
        "profileId#0 (copy)"
      ],
      "stack_out": [
        "profileId#0 (copy)"
      ]
    },
    "353": {
      "callsub": "smart_contracts.registry.contract.Registry.getProfileById",
      "op": "callsub getProfileById",
      "defined_out": [
        "profile#0"
      ],
      "stack_out": [
        "profile#0"
      ]
    },
    "356": {
      "op": "dup",
      "defined_out": [
        "profile#0",
        "profile#0 (copy)"
      ],
      "stack_out": [
        "profile#0",
        "profile#0 (copy)"
      ]
    },
    "357": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "profile#0",
        "profile#0 (copy)"
      ],
      "stack_out": [
        "profile#0",
        "profile#0 (copy)",
        "32"
      ]
    },
    "359": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "profile#0"
      ],
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0"
      ]
    },
    "360": {
      "op": "dig 1",
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0",
        "profile#0 (copy)"
      ]
    },
    "362": {
      "op": "pushint 34 // 34",
      "defined_out": [
        "34",
        "item_start_offset%0#0",
        "profile#0",
        "profile#0 (copy)"
      ],
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0",
        "profile#0 (copy)",
        "34"
      ]
    },
    "364": {
      "op": "extract_uint16",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "profile#0"
      ],
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "365": {
      "op": "substring3",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "366": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "369": {
      "retsub": true,
      "op": "retsub"
    },
    "370": {
      "subroutine": "smart_contracts.registry.contract.Registry.getProfileMetadata",
      "params": {
        "profileId#0": "bytes"
      },
      "block": "getProfileMetadata",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "373": {
      "op": "frame_dig -1",
      "defined_out": [
        "profileId#0 (copy)"
      ],
      "stack_out": [
        "profileId#0 (copy)"
      ]
    },
    "375": {
      "callsub": "smart_contracts.registry.contract.Registry.getProfileById",
      "op": "callsub getProfileById",
      "defined_out": [
        "profile#0"
      ],
      "stack_out": [
        "profile#0"
      ]
    },
    "378": {
      "op": "dup",
      "defined_out": [
        "profile#0",
        "profile#0 (copy)"
      ],
      "stack_out": [
        "profile#0",
        "profile#0 (copy)"
      ]
    },
    "379": {
      "op": "pushint 34 // 34",
      "defined_out": [
        "34",
        "profile#0",
        "profile#0 (copy)"
      ],
      "stack_out": [
        "profile#0",
        "profile#0 (copy)",
        "34"
      ]
    },
    "381": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "profile#0"
      ],
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0"
      ]
    },
    "382": {
      "op": "dig 1",
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0",
        "profile#0 (copy)"
      ]
    },
    "384": {
      "op": "intc_3 // 68",
      "defined_out": [
        "68",
        "item_start_offset%0#0",
        "profile#0",
        "profile#0 (copy)"
      ],
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0",
        "profile#0 (copy)",
        "68"
      ]
    },
    "385": {
      "op": "extract_uint16",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "profile#0"
      ],
      "stack_out": [
        "profile#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "386": {
      "op": "substring3",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "387": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "390": {
      "retsub": true,
      "op": "retsub"
    },
    "391": {
      "subroutine": "smart_contracts.registry.contract.Registry.addMember",
      "params": {
        "profileId#0": "bytes",
        "member#0": "bytes"
      },
      "block": "addMember",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "394": {
      "op": "bytec_1 // \"profilesById\"",
      "defined_out": [
        "\"profilesById\""
      ],
      "stack_out": [
        "\"profilesById\""
      ]
    },
    "395": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"profilesById\"",
        "profileId#0 (copy)"
      ],
      "stack_out": [
        "\"profilesById\"",
        "profileId#0 (copy)"
      ]
    },
    "397": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "398": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "399": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "maybe_exists%0#0"
      ]
    },
    "400": {
      "error": "check self.profilesById entry exists",
      "op": "assert // check self.profilesById entry exists",
      "stack_out": [
        "tmp%0#0",
        "profile#0"
      ]
    },
    "401": {
      "op": "dup",
      "defined_out": [
        "profile#0",
        "profile#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "profile#0 (copy)"
      ]
    },
    "402": {
      "op": "intc_2 // 70",
      "defined_out": [
        "70",
        "profile#0",
        "profile#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "profile#0 (copy)",
        "70"
      ]
    },
    "403": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0"
      ]
    },
    "404": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "profile#0 (copy)"
      ]
    },
    "406": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "407": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "profile#0 (copy)"
      ]
    },
    "409": {
      "op": "dig 2",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "item_start_offset%0#0 (copy)",
        "profile#0",
        "profile#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "profile#0 (copy)",
        "item_start_offset%0#0 (copy)"
      ]
    },
    "411": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "profile#0 (copy)",
        "item_start_offset%0#0 (copy)",
        "item_end_offset%0#0"
      ]
    },
    "413": {
      "op": "substring3",
      "defined_out": [
        "item_start_offset%0#0",
        "profile#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "tmp%1#0"
      ]
    },
    "414": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "item_start_offset%0#0",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "417": {
      "op": "frame_dig -1",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "item_start_offset%0#0",
        "member#0 (copy)",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "expr_value_trimmed%0#0",
        "member#0 (copy)"
      ]
    },
    "419": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "item_start_offset%0#0",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "concatenated%0#0"
      ]
    },
    "420": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_start_offset%0#0",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "421": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "422": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "32"
      ]
    },
    "424": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_%0#0",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "425": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "item_start_offset%0#0",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "426": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "429": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "430": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0",
        "item_start_offset%0#0",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "item_start_offset%0#0",
        "concat_result%0#0"
      ]
    },
    "431": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "profile#0"
      ]
    },
    "433": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "concat_result%0#0",
        "item_start_offset%0#0",
        "profile#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "item_start_offset%0#0",
        "concat_result%0#0",
        "profile#0",
        "0"
      ]
    },
    "434": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "concat_result%0#0",
        "profile#0",
        "0",
        "item_start_offset%0#0"
      ]
    },
    "436": {
      "op": "extract3",
      "defined_out": [
        "concat_result%0#0",
        "data_up_to_item%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "concat_result%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "437": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "data_up_to_item%0#0",
        "concat_result%0#0"
      ]
    },
    "438": {
      "op": "concat",
      "stack_out": [
        "tmp%0#0",
        "profile#0"
      ]
    },
    "439": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "tmp%0#0 (copy)"
      ]
    },
    "441": {
      "op": "box_del",
      "defined_out": [
        "profile#0",
        "tmp%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%0#0",
        "profile#0",
        "{box_del}"
      ]
    },
    "442": {
      "op": "pop",
      "stack_out": [
        "tmp%0#0",
        "profile#0"
      ]
    },
    "443": {
      "op": "box_put",
      "stack_out": []
    },
    "444": {
      "retsub": true,
      "op": "retsub"
    },
    "445": {
      "subroutine": "smart_contracts.registry.contract.Registry.createProfile",
      "params": {
        "name#0": "bytes",
        "metadata#0": "bytes"
      },
      "block": "createProfile",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "448": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "449": {
      "op": "bytec_2 // \"index\"",
      "defined_out": [
        "\"index\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"index\""
      ]
    },
    "450": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "maybe_exists%0#0"
      ]
    },
    "451": {
      "error": "check self.index exists",
      "op": "assert // check self.index exists",
      "stack_out": [
        "profileId#0"
      ]
    },
    "452": {
      "op": "itxn_begin"
    },
    "453": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "1"
      ]
    },
    "454": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "profileId#0"
      ]
    },
    "456": {
      "op": "pushbytes base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw==",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "CoEBQw=="
      ]
    },
    "462": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "profileId#0"
      ]
    },
    "464": {
      "op": "pushbytes base64(CiAEAQDoBwQmAQVvd25lcjEYQAADiAAEiAAJQ4oAACgyA2eJigABMRtBAJqCBQSFSlGNBNfnR4EEO9fOLAQP2ZhwBCgmsgI2GgCOBQACABQALABCAF4jiTEZFEQxGEQ2GgEXwByIAGsiiTEZFEQxGEQ2GgEXwBw2GgIXwDKIAGMiiTEZFEQxGEQ2GgEXwBw2GgIXiABuIokxGRREMRhENhoBF8AcNhoCF8AwNhoDF4gAdSKJMRkURDEYRDYaARfAMIgAfiKJMRlAAAYxGBREIokjiYoBACMoZUQyAxJEKIv/Z4mKAgAjKGVEMgMSRCiL/mexMgAishmL/7IYgQayELIBs4mKAgCIABGxi/+yCIv+sgcishAksgGziYoAACMoZUQxABJEiYoDAIj/7rGL/7ISi/6yEYv9shQlshAksgGziYoBAIj/07ExACOyEov/shGyFCWyECSyAbOJ)",
      "defined_out": [
        "CiAEAQDoBwQmAQVvd25lcjEYQAADiAAEiAAJQ4oAACgyA2eJigABMRtBAJqCBQSFSlGNBNfnR4EEO9fOLAQP2ZhwBCgmsgI2GgCOBQACABQALABCAF4jiTEZFEQxGEQ2GgEXwByIAGsiiTEZFEQxGEQ2GgEXwBw2GgIXwDKIAGMiiTEZFEQxGEQ2GgEXwBw2GgIXiABuIokxGRREMRhENhoBF8AcNhoCF8AwNhoDF4gAdSKJMRkURDEYRDYaARfAMIgAfiKJMRlAAAYxGBREIokjiYoBACMoZUQyAxJEKIv/Z4mKAgAjKGVEMgMSRCiL/mexMgAishmL/7IYgQayELIBs4mKAgCIABGxi/+yCIv+sgcishAksgGziYoAACMoZUQxABJEiYoDAIj/7rGL/7ISi/6yEYv9shQlshAksgGziYoBAIj/07ExACOyEov/shGyFCWyECSyAbOJ",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "CiAEAQDoBwQmAQVvd25lcjEYQAADiAAEiAAJQ4oAACgyA2eJigABMRtBAJqCBQSFSlGNBNfnR4EEO9fOLAQP2ZhwBCgmsgI2GgCOBQACABQALABCAF4jiTEZFEQxGEQ2GgEXwByIAGsiiTEZFEQxGEQ2GgEXwBw2GgIXwDKIAGMiiTEZFEQxGEQ2GgEXwBw2GgIXiABuIokxGRREMRhENhoBF8AcNhoCF8AwNhoDF4gAdSKJMRkURDEYRDYaARfAMIgAfiKJMRlAAAYxGBREIokjiYoBACMoZUQyAxJEKIv/Z4mKAgAjKGVEMgMSRCiL/mexMgAishmL/7IYgQayELIBs4mKAgCIABGxi/+yCIv+sgcishAksgGziYoAACMoZUQxABJEiYoDAIj/7rGL/7ISi/6yEYv9shQlshAksgGziYoBAIj/07ExACOyEov/shGyFCWyECSyAbOJ"
      ]
    },
    "815": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "profileId#0"
      ]
    },
    "817": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "appl"
      ]
    },
    "819": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "profileId#0"
      ]
    },
    "821": {
      "op": "pushint 2000 // 2000",
      "defined_out": [
        "2000",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "2000"
      ]
    },
    "824": {
      "op": "itxn_field Fee",
      "stack_out": [
        "profileId#0"
      ]
    },
    "826": {
      "op": "itxn_submit"
    },
    "827": {
      "op": "itxn CreatedApplicationID"
    },
    "829": {
      "op": "dup",
      "defined_out": [
        "anchor_app#0",
        "anchor_app#0 (copy)",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchor_app#0 (copy)"
      ]
    },
    "830": {
      "op": "itob",
      "defined_out": [
        "anchor_app#0",
        "profileId#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "val_as_bytes%0#0"
      ]
    },
    "831": {
      "op": "dup",
      "defined_out": [
        "anchor_app#0",
        "profileId#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "832": {
      "op": "len",
      "defined_out": [
        "anchor_app#0",
        "byte_len%0#0",
        "profileId#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "val_as_bytes%0#0",
        "byte_len%0#0"
      ]
    },
    "833": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "anchor_app#0",
        "byte_len%0#0",
        "profileId#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "val_as_bytes%0#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "835": {
      "op": "/",
      "defined_out": [
        "anchor_app#0",
        "len_%0#0",
        "profileId#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "val_as_bytes%0#0",
        "len_%0#0"
      ]
    },
    "836": {
      "op": "itob",
      "defined_out": [
        "anchor_app#0",
        "as_bytes%0#0",
        "profileId#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "val_as_bytes%0#0",
        "as_bytes%0#0"
      ]
    },
    "837": {
      "op": "extract 6 2",
      "defined_out": [
        "anchor_app#0",
        "len_16_bit%0#0",
        "profileId#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "val_as_bytes%0#0",
        "len_16_bit%0#0"
      ]
    },
    "840": {
      "op": "swap",
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "len_16_bit%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "841": {
      "op": "concat",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1"
      ]
    },
    "842": {
      "op": "txn Sender",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "profileId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0"
      ]
    },
    "844": {
      "op": "dig 3",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "profileId#0",
        "profileId#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "profileId#0 (copy)"
      ]
    },
    "846": {
      "op": "pushbytes 0x0048",
      "defined_out": [
        "0x0048",
        "anchor_app#0",
        "anchors#1",
        "profileId#0",
        "profileId#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "profileId#0 (copy)",
        "0x0048"
      ]
    },
    "850": {
      "op": "concat",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%2#0",
        "profileId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "851": {
      "op": "frame_dig -2",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%2#0",
        "name#0 (copy)",
        "profileId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "encoded_tuple_buffer%2#0",
        "name#0 (copy)"
      ]
    },
    "853": {
      "op": "len",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "data_length%0#0",
        "encoded_tuple_buffer%2#0",
        "profileId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0"
      ]
    },
    "854": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "anchor_app#0",
        "anchors#1",
        "data_length%0#0",
        "encoded_tuple_buffer%2#0",
        "profileId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "encoded_tuple_buffer%2#0",
        "data_length%0#0",
        "72"
      ]
    },
    "856": {
      "op": "+",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "profileId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0"
      ]
    },
    "857": {
      "op": "dup",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)",
        "encoded_tuple_buffer%2#0",
        "profileId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)"
      ]
    },
    "858": {
      "op": "itob",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "as_bytes%2#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "profileId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0",
        "as_bytes%2#0"
      ]
    },
    "859": {
      "op": "extract 6 2",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%1#0",
        "profileId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0"
      ]
    },
    "862": {
      "op": "uncover 2",
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "864": {
      "op": "swap",
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%1#0"
      ]
    },
    "865": {
      "op": "concat",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0",
        "profileId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "866": {
      "op": "frame_dig -1",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0",
        "metadata#0 (copy)",
        "profileId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0",
        "metadata#0 (copy)"
      ]
    },
    "868": {
      "op": "len",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%1#0",
        "data_length%1#0",
        "encoded_tuple_buffer%3#0",
        "profileId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%3#0",
        "data_length%1#0"
      ]
    },
    "869": {
      "op": "uncover 2",
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "encoded_tuple_buffer%3#0",
        "data_length%1#0",
        "current_tail_offset%1#0"
      ]
    },
    "871": {
      "op": "+",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "profileId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "encoded_tuple_buffer%3#0",
        "current_tail_offset%2#0"
      ]
    },
    "872": {
      "op": "swap",
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "tmp%0#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "873": {
      "op": "uncover 2",
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "tmp%0#0"
      ]
    },
    "875": {
      "op": "concat",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%4#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "876": {
      "op": "dig 1",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "current_tail_offset%2#0 (copy)",
        "encoded_tuple_buffer%4#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%4#0",
        "current_tail_offset%2#0 (copy)"
      ]
    },
    "878": {
      "op": "itob",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "as_bytes%3#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%4#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%4#0",
        "as_bytes%3#0"
      ]
    },
    "879": {
      "op": "extract 6 2",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%4#0",
        "offset_as_uint16%2#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%4#0",
        "offset_as_uint16%2#0"
      ]
    },
    "882": {
      "op": "concat",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%5#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "883": {
      "op": "dig 2",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "anchors#1 (copy)",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%5#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%5#0",
        "anchors#1 (copy)"
      ]
    },
    "885": {
      "op": "len",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "data_length%2#0",
        "encoded_tuple_buffer%5#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%5#0",
        "data_length%2#0"
      ]
    },
    "886": {
      "op": "uncover 2",
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%5#0",
        "data_length%2#0",
        "current_tail_offset%2#0"
      ]
    },
    "888": {
      "op": "+",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%5#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%5#0",
        "current_tail_offset%3#0"
      ]
    },
    "889": {
      "op": "itob",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "as_bytes%4#0",
        "encoded_tuple_buffer%5#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%5#0",
        "as_bytes%4#0"
      ]
    },
    "890": {
      "op": "extract 6 2",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%5#0",
        "offset_as_uint16%3#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%5#0",
        "offset_as_uint16%3#0"
      ]
    },
    "893": {
      "op": "concat",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%6#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "894": {
      "op": "frame_dig -2",
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%6#0",
        "name#0 (copy)"
      ]
    },
    "896": {
      "op": "concat",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%7#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "897": {
      "op": "frame_dig -1",
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%7#0",
        "metadata#0 (copy)"
      ]
    },
    "899": {
      "op": "concat",
      "defined_out": [
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%8#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "anchors#1",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "900": {
      "op": "swap",
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "encoded_tuple_buffer%8#0",
        "anchors#1"
      ]
    },
    "901": {
      "op": "concat",
      "defined_out": [
        "anchor_app#0",
        "encoded_tuple_buffer%9#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "902": {
      "op": "pushbytes base32(AAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)",
      "defined_out": [
        "AAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
        "anchor_app#0",
        "encoded_tuple_buffer%9#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "encoded_tuple_buffer%9#0",
        "AAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ]
    },
    "938": {
      "op": "concat",
      "defined_out": [
        "anchor_app#0",
        "profile#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "profile#0"
      ]
    },
    "939": {
      "op": "bytec_1 // \"profilesById\"",
      "defined_out": [
        "\"profilesById\"",
        "anchor_app#0",
        "profile#0",
        "profileId#0"
      ],
      "stack_out": [
        "profileId#0",
        "anchor_app#0",
        "profile#0",
        "\"profilesById\""
      ]
    },
    "940": {
      "op": "uncover 3",
      "stack_out": [
        "anchor_app#0",
        "profile#0",
        "\"profilesById\"",
        "profileId#0"
      ]
    },
    "942": {
      "op": "concat",
      "defined_out": [
        "anchor_app#0",
        "profile#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "anchor_app#0",
        "profile#0",
        "tmp%2#0"
      ]
    },
    "943": {
      "op": "dup",
      "defined_out": [
        "anchor_app#0",
        "profile#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "anchor_app#0",
        "profile#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "944": {
      "op": "box_del",
      "defined_out": [
        "anchor_app#0",
        "profile#0",
        "tmp%2#0",
        "{box_del}"
      ],
      "stack_out": [
        "anchor_app#0",
        "profile#0",
        "tmp%2#0",
        "{box_del}"
      ]
    },
    "945": {
      "op": "pop",
      "stack_out": [
        "anchor_app#0",
        "profile#0",
        "tmp%2#0"
      ]
    },
    "946": {
      "op": "swap",
      "stack_out": [
        "anchor_app#0",
        "tmp%2#0",
        "profile#0"
      ]
    },
    "947": {
      "op": "box_put",
      "stack_out": [
        "anchor_app#0"
      ]
    },
    "948": {
      "retsub": true,
      "op": "retsub"
    }
  }
}