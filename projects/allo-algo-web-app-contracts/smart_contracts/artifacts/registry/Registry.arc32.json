{
    "hints": {
        "getProfileById(uint512)(uint256,string,string,address,uint64[],address[])": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "Profile",
                    "elements": [
                        [
                            "id",
                            "uint256"
                        ],
                        [
                            "name",
                            "string"
                        ],
                        [
                            "metadata",
                            "string"
                        ],
                        [
                            "owner",
                            "address"
                        ],
                        [
                            "anchors",
                            "uint64[]"
                        ],
                        [
                            "members",
                            "address[]"
                        ]
                    ]
                }
            }
        },
        "getAnchors(uint512)uint64[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "getMembers(uint512)address[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "getProfileName(uint512)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "getProfileMetadata(uint512)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "addMember(uint512,address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "createProfile(string,string)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMucmVnaXN0cnkuY29udHJhY3QuUmVnaXN0cnkuY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 2,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "index": {
                    "type": "bytes",
                    "key": "index"
                },
                "version": {
                    "type": "bytes",
                    "key": "version"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Registry",
        "methods": [
            {
                "name": "getProfileById",
                "args": [
                    {
                        "type": "uint512",
                        "name": "id"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(uint256,string,string,address,uint64[],address[])"
                }
            },
            {
                "name": "getAnchors",
                "args": [
                    {
                        "type": "uint512",
                        "name": "profileId"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64[]"
                }
            },
            {
                "name": "getMembers",
                "args": [
                    {
                        "type": "uint512",
                        "name": "profileId"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "address[]"
                }
            },
            {
                "name": "getProfileName",
                "args": [
                    {
                        "type": "uint512",
                        "name": "profileId"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "getProfileMetadata",
                "args": [
                    {
                        "type": "uint512",
                        "name": "profileId"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "addMember",
                "args": [
                    {
                        "type": "uint512",
                        "name": "profileId"
                    },
                    {
                        "type": "address",
                        "name": "member"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "createProfile",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "string",
                        "name": "metadata"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}